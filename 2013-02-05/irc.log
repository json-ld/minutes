[Tue 10:01]	<manu-db>	Agenda: http://lists.w3.org/Archives/Public/public-linked-json/2013Feb/0003.html
[Tue 10:01]	-->|	mlnt (~markus@84-115-182-43.dynamic.surfer.at) has joined #json-ld
[Tue 10:01]	<voip-ld>	Markus Lanthaler (SIP/sip.linphone.org-000000bf) has joined the conference.
[Tue 10:01]	<voip-ld>	Dave Longley (SIP/6002-000000c0) has joined the conference.
[Tue 10:01]	<voip-ld>	Niklas Lindström (SIP/192.168.3.23-000000c1) has joined the conference.
[Tue 10:05]	<manu-db>	Any additions to the Agenda?
[Tue 10:05]	<manu-db>	scribe: niklasl
[Tue 10:05]	<niklasl>	q+
[Tue 10:05]	<voip-ld>	Added niklasl to the speaker queue: niklasl
[Tue 10:05]	<manu-db>	ack niklasl
[Tue 10:05]	<voip-ld>	niklasl has the floor. The speaker queue is empty.
[Tue 10:06]	<manu-db>	niklasl: We might want to discuss the reply and suggested change to Eric's recent mail regarding when a default graph is turned into a named graph.
[Tue 10:07]	<manu-db>	niklasl: If we have time, I'd like to describe some potential future needs when working with National Library of Sweden stuff. We're officially using JSON-LD there now, maybe some framing-like issues and @rev like stuff.
[Tue 10:08]	<manu-db>	gkellogg: I may do a CG proposal for @ordered
[Tue 10:08]	<niklasl>	gregg: I'm probably going to do a community document regarding @list, like @ordered..
[Tue 10:08]	<manu-db>	Topic: New Alternate Algorithms Review
[Tue 10:08]	* niklasl	gregg: that sounds like an idea I also had; I'll get back to this :)
[Tue 10:09]	<niklasl>	dave: I have worked on merging the current and alternate texts for the algorithms, e.g. including the lookup table (inverse context) for term selection, also added examples and a visual description
[Tue 10:10]	<niklasl>	… my goal is also to have an implementation (the one used on the playground) is implementing this new spec text (alternate2)
[Tue 10:10]	<voip-ld>	<unknown> (IAX2/diamondcard-1932) has joined the conference.
[Tue 10:11]	-->|	pkuyken (d83e1181@gateway/web/freenode/ip.216.62.17.129) has joined #json-ld
[Tue 10:11]	<niklasl>	… I've also detected things that were missing, like keyword aliasing
[Tue 10:11]	<niklasl>	… we have heard of at least one processor that didn't work when impl. the described algorithms
[Tue 10:12]	<niklasl>	… I've left out the 2 or 3 controversial issues that we have left (like relative iris)
[Tue 10:13]	<niklasl>	… I've also added some sections to describe the general problem (or "purpose" as gregg suggested) in paragraph form, for people who do their own algorithms
[Tue 10:13]	<niklasl>	… it's difficult to wrap your mind how all the algorithms work together; so I've attempted to address that as well, e.g. by using the notion of a "subalgorithm"
[Tue 10:14]	<niklasl>	… not yet updated: the flattening and node mapping algorithms
[Tue 10:14]	<niklasl>	… also the mapping to rdf concepts may need more review
[Tue 10:15]	<niklasl>	… in summary: we have a working implementation of this, and it should be noted that it didn't really need that many updates
[Tue 10:15]	<niklasl>	gregg: I like the context processing; it's the term selection that seem problematic
[Tue 10:16]	<niklasl>	dave: re context processing: I reordered to put it first
[Tue 10:16]	<niklasl>	q+
[Tue 10:16]	<voip-ld>	Added niklasl to the speaker queue: niklasl
[Tue 10:17]	<niklasl>	… we tailored the API to do async processing
[Tue 10:17]	<niklasl>	… but it may be better to retrieve all the contexts beforehand, and then do the processing
[Tue 10:17]	<niklasl>	… this is also much more beneficial for our payswarm work
[Tue 10:18]	<niklasl>	… caching processed contexts
[Tue 10:18]	<manu-db>	ack niklasl
[Tue 10:18]	<voip-ld>	niklasl has the floor. The speaker queue is empty.
[Tue 10:18]	<manu-db>	niklasl: Thanks for the great summary and work - sounds awesome.
[Tue 10:18]	<manu-db>	niklasl: It's interesting about the pre-loading the context stuff - it dawned on me a while ago, but didn't have the time to digest the idea.
[Tue 10:19]	<manu-db>	niklasl: Things we've talked about regarding asynchronous processing in general would be affected if you needed all the contexts beforehand. I wonder if there is something more to that idea that would affect the API as well. We've discussed async vs. sync approaches - maybe the API needs to be modified... maybe the transformation step is purely functional?
[Tue 10:20]	<niklasl>	dave: I'm not sure we can eliminate that, since someone might need to do something async during the processing
[Tue 10:20]	<manu-db>	dlongley: I don't know if we can eliminate async entirely - there may be ways to make it simpler, but I don't think we can remove some of the stuff from the API. If anybody wanted to do anything that we don't think of in this group, we might cripple them.
[Tue 10:20]	<pkuyken>	q+
[Tue 10:20]	<voip-ld>	Added pkuyken to the speaker queue: pkuyken
[Tue 10:20]	<manu-db>	ack pkuyken
[Tue 10:20]	<voip-ld>	pkuyken has the floor. The speaker queue is empty.
[Tue 10:21]	<niklasl>	paul: I'm in the group implementing the C# impl. I'd like to note that this new layout of the spec looks very helpful.
[Tue 10:22]	<manu-db>	ack pkuyken
[Tue 10:22]	<niklasl>	… e.g. putting context processing first, and the explanatory additions to each algorithm are valuable
[Tue 10:22]	<mlnt>	q+
[Tue 10:22]	<voip-ld>	Added mlnt to the speaker queue: mlnt
[Tue 10:23]	<niklasl>	manu: so, the question is if we want to move forward with one of the three spec alternatives we have before us
[Tue 10:23]	<manu-db>	ack mlnt
[Tue 10:23]	<voip-ld>	mlnt has the floor. The speaker queue is empty.
[Tue 10:23]	<niklasl>	markus: I think we should include the prose of this directly in the spec. We could agree on that and then discuss the algorithms separately.
[Tue 10:24]	<gkellogg>	q+
[Tue 10:24]	<voip-ld>	Added gkellogg to the speaker queue: gkellogg
[Tue 10:24]	<manu-db>	ack gkellogg
[Tue 10:24]	<voip-ld>	gkellogg has the floor. The speaker queue is empty.
[Tue 10:24]	<niklasl>	manu: sounds good
[Tue 10:25]	<niklasl>	gregg: I see value in being able to take some sample data, and walk through the algorithm step by step to see what's going on
[Tue 10:25]	<niklasl>	… there is something on term selection which seems to intentionally be similar to term ranking
[Tue 10:25]	<niklasl>	… and what's the relation to inverse contexts
[Tue 10:26]	<niklasl>	dave: so inverse contexts gives a lookup from iri to possible terms, and term selection goes through the alternatives; first building the container and then going through if there's a language, etc.
[Tue 10:27]	<niklasl>	… when doing compaction: get info for property IRI, then match values which apply; and then term selection looks for specificity to select the proper one
[Tue 10:28]	<niklasl>	… think of the new term selection algorithm as similar to markus' querying of inverse context
[Tue 10:29]	<niklasl>	gregg: what might help is a picture or table to illustrate this
[Tue 10:29]	<niklasl>	dave: yes, a table would be helpful, and show with arrows what is selected
[Tue 10:31]	<niklasl>	dave: i wanted to be clear that we're not going to modify the data, therefore I used the notion of a shallow copy
[Tue 10:32]	<niklasl>	gregg: I think we need to move forward with this, and dave's rewrite addresses or major issues with complexity. Compaction is still very complicated, but I think this is the path to go
[Tue 10:33]	<niklasl>	dave: there are also places where we explain over again local processing steps which we could probably explain the gist of and define them (and then link to them)
[Tue 10:33]	<niklasl>	gregg: like a micro-algorithm section, sounds good
[Tue 10:34]	<niklasl>	manu: my high level read-over gives me the same impression as gregg; the purpose and direction of this is where we want to go
[Tue 10:34]	<niklasl>	… the things fit together much better now
[Tue 10:34]	<niklasl>	… and the algorithm work has been very thorough
[Tue 10:35]	<niklasl>	… so no it's much easier to get an overview
[Tue 10:36]	<niklasl>	markus: was the error stuff removal a conscious decision?
[Tue 10:36]	<niklasl>	dave: I wanted to get away from a lot of MUST and SHOULD language
[Tue 10:37]	<niklasl>	… so I combined markus' and gregg's error description
[Tue 10:37]	<gkellogg>	q+
[Tue 10:37]	<voip-ld>	Added gkellogg to the speaker queue: gkellogg
[Tue 10:37]	<niklasl>	… but we should probably add technical (API) error text back
[Tue 10:37]	<niklasl>	… we should combine the MUST/SHOULD with that
[Tue 10:37]	<manu-db>	ack gkellogg
[Tue 10:37]	<voip-ld>	gkellogg has the floor. The speaker queue is empty.
[Tue 10:38]	<niklasl>	gregg: re. MUST text, if we use that, and we're duplicating normative text that should exist in the normative grammar, we should look for something better than repeating that
[Tue 10:38]	<niklasl>	… using an error code seemed incongruous with an algorithm which is much more mathematical in nature
[Tue 10:39]	<niklasl>	… it'd be better with a constant with a title
[Tue 10:39]	<mlnt>	http://json-ld.org.local/spec/latest/json-ld-api/alternate2.html#idl-def-JsonLdErrorCode
[Tue 10:39]	<niklasl>	… e.g. a "list-of-list error" (could be a tref)
[Tue 10:39]	<niklasl>	… I prefer something less prescriptive than "raise an error"
[Tue 10:39]	<mlnt>	ups... local IRI
[Tue 10:40]	<niklasl>	… but we need to be explicit about what is an exceptional error, and leave to the API to define what that is
[Tue 10:40]	<mlnt>	s/http://json-ld.org.local/spec/latest/json-ld-api/alternate2.html#idl-def-JsonLdErrorCode/http://json-ld.org/spec/latest/json-ld-api/#idl-def-JsonLdErrorCode/
[Tue 10:41]	<niklasl>	gregg: there is a circular dependency issue of letting the algorithm reference to the API, we need something separate, and let the API also refer to that
[Tue 10:41]	<niklasl>	… the algorithms should exist without the API
[Tue 10:41]	<niklasl>	manu: so both could refer to the lookup table, defined in prose
[Tue 10:42]	<niklasl>	gregg: yes, and it could also be used to index back to the normative text describing this
[Tue 10:42]	<manu-db>	q+ to move on.
[Tue 10:42]	<voip-ld>	Added manu-db to the speaker queue: manu-db
[Tue 10:42]	<niklasl>	markus: I don't see how the constants are coupling the algorithms with the API
[Tue 10:43]	<manu-db>	ack manu-db
[Tue 10:43]	<voip-ld>	manu-db has the floor (to move on.). The speaker queue is empty.
[Tue 10:43]	<niklasl>	manu: let's take this part back to the list
[Tue 10:43]	<niklasl>	… can we do a proposal on the high level text, and next week propose on the algorithms?
[Tue 10:44]	<niklasl>	gregg: I would like to come back also to the RDF algorithms
[Tue 10:45]	<niklasl>	dave+manu: also include the feature definition language?
[Tue 10:46]	<manu-db>	PROPOSAL: Adopt the 'purpose' and 'general solution' language in Dave Longley's (alternate2.html) specification.
[Tue 10:46]	<manu-db>	+1
[Tue 10:46]	<gkellogg>	+1
[Tue 10:46]	<dlongley>	+1
[Tue 10:46]	<niklasl>	+1
[Tue 10:46]	<mlnt>	+1
[Tue 10:46]	<pkuyken>	+1
[Tue 10:47]	<manu-db>	RESOLVED: Adopt the 'purpose' and 'general solution' language in Dave Longley's (alternate2.html) specification.
[Tue 10:47]	<niklasl>	manu: Markus to review the algorithms; next week we'll handle whether or not we want to include Dave Longley's algorithm rewrites.
[Tue 10:47]	<manu-db>	Topic: RDF Algorithms Section
[Tue 10:48]	<niklasl>	gregg: there has been some issues regarding aligning with the RDF concepts, we need to determine the status of that
[Tue 10:48]	<niklasl>	… also, to add explicit examples
[Tue 10:48]	<niklasl>	manu: yes, would be good (using turtle)
[Tue 10:49]	<niklasl>	markus: does it require to be expanded+flattened?
[Tue 10:49]	<niklasl>	gregg: there' based upon expanded; there may be some recursion issue, but I'll look at if it would be simplified by flattnening
[Tue 10:50]	<voip-ld>	Added manu-db to the speaker queue: manu-db
[Tue 10:51]	<manu-db>	ack manu-db
[Tue 10:51]	<voip-ld>	manu-db has the floor (to point out looping > recursion when explaining.). The speaker queue is empty.
[Tue 10:51]	<niklasl>	… complexity on the order of turtle parsing
[Tue 10:51]	-->|	PaulCapestany (~PaulCapes@204.28.124.82) has joined #json-ld
[Tue 10:51]	<niklasl>	manu: it might be easier to explain without recursion
[Tue 10:52]	<niklasl>	… looping over flattened input is probably easier to explain
[Tue 10:53]	<manu-db>	Topic: ISSUE-217: Disallow BNode identifier as Graph Name
[Tue 10:53]	<manu-db>	https://github.com/json-ld/json-ld.org/issues/217
[Tue 10:54]	<niklasl>	manu: about using blank node identifiers as a graph name. We raised this with the RDF group. Their response is that graph names can only be IRIs.
[Tue 10:54]	<niklasl>	… this is problematic when doing graph normalization. When you have two graphs, without bnode names, you have to generate a name
[Tue 10:54]	<niklasl>	… we can't use a hash of the content to name the graph, we could use fragment IDs, but we'd be specifying something new. Basically, if we invent a new mechanism, we're just re-inventing bnode identifiers.
[Tue 10:55]	<niklasl>	dave: if you have two graphs without id but same values, you'd have to assume they're the same graph, which is not correct.
[Tue 10:55]	<niklasl>	gregg: what if we say that if graphs occurs without an @id, it's a default graph?
[Tue 10:55]	<niklasl>	gregg: according to RDF concepts, you can't have two graphs that don't have names
[Tue 10:56]	<niklasl>	… when turning that into RDF, you cannot.
[Tue 10:56]	<niklasl>	manu: Well, if you named them with "blank graph names" you could. RDF Concepts states that you cant' have anonymous graph names that are local to the document, which is a mistake.
[Tue 10:56]	<niklasl>	gregg: fragment identifers do that
[Tue 10:57]	<niklasl>	q+
[Tue 10:57]	<voip-ld>	Added niklasl to the speaker queue: niklasl
[Tue 10:58]	<niklasl>	gregg: you can't process the same document twice and get the same bnode out
[Tue 10:58]	<manu-db>	ack niklasl
[Tue 10:58]	<voip-ld>	niklasl has the floor. The speaker queue is empty.
[Tue 10:59]	<niklasl>	gregg: we're setting ourselves up for problems if we diverge from RDF
[Tue 10:59]	<manu-db>	niklasl: I agree with Gregg in principle - it'll just cause more problems if we diverge from RDF WG.
[Tue 10:59]	<manu-db>	niklasl: We support bnode names for properties, right?
[Tue 11:00]	<manu-db>	manu: Yep.
[Tue 11:00]	<manu-db>	niklasl: Terms that don't have explicit @id of @null are dropped?
[Tue 11:00]	<manu-db>	markus: yes.
[Tue 11:01]	<manu-db>	niklasl: We support blank nodes for properties, but not graphs? Syntax for @id supports bnode @ids, maybe we should do a SHOULD NOT support bnode IDs for properties and graphs?
[Tue 11:01]	<manu-db>	q+
[Tue 11:01]	<voip-ld>	Added manu-db to the speaker queue: manu-db
[Tue 11:02]	<manu-db>	niklasl: The reason to have two blank node identifiers is to say that there are two graphs that are not named.
[Tue 11:03]	<niklasl>	manu: yes, the problem is that the RDF model doesn't allow two different graphs to exist without having names, which is dumb because they allow two different nodes to exist without names. Seems like a completely arbitrary decision.
[Tue 11:06]	<niklasl>	manu: it seems the reason for disallowing this seems more political than logical - no consensus to do anything, so don't do anything. This has a real-world consequence in that it will break the RDF Dataset Normalization Algorithm.
[Tue 11:06]	<niklasl>	q+
[Tue 11:06]	<voip-ld>	Added niklasl to the speaker queue: manu-db, niklasl
[Tue 11:06]	<manu-db>	ack manu-db
[Tue 11:06]	<voip-ld>	manu-db has the floor. The next speaker is niklasl.
[Tue 11:07]	<niklasl>	gregg: if the name must be an IRI, there is no issue. What we need to to is note that it's a violation if it's a bnode id.
[Tue 11:07]	<manu-db>	ack niklasl
[Tue 11:07]	<voip-ld>	manu-db has the floor. The speaker queue is empty.
[Tue 11:08]	<manu-db>	niklasl: I haven't read RDF concepts in detail about this recently, one thing that strikes me as odd is that you never in any part of RDF Concepts, expect the IRI or bnode to be "different", apart from lists.
[Tue 11:09]	<niklasl>	manu: the current RDF 1.1 concepts spec doesn't say that node and graph are disjoint
[Tue 11:10]	<voip-ld>	Dave Lehn (SIP/6003-000000c2) has joined the conference.
[Tue 11:10]	<niklasl>	manu: you can have two blank nodes that refer to each other. You cannot do that with two "blank" graphs. Why?
[Tue 11:11]	<niklasl>	gregg: are we really bound to the RDF data model and WG? I think we are.
[Tue 11:11]	<niklasl>	manu: Gregg and I disagree here. We have done as much alignment as possible. There are minute differences where JSON-LD is explicitly more lax and accommodating. E.g. bnodeid's for properties.
[Tue 11:12]	<niklasl>	… and up to last week support for bnode id's for graph ids
[Tue 11:12]	<niklasl>	dave: it doesn't help with normalization though, which is tied to quads, we need to be able to use /something/ in the graph position. We've been using a blank-node like identifier.
[Tue 11:13]	<niklasl>	… I think we need to say that if you're gonna use @graph other than as default; you need an @id
[Tue 11:19]	<niklasl>	Discussion around the effect of bnode ids for graphs won't match since those ids aren't stable... though, identifiers will be internally stable (to the document or quad-store).
[Tue 11:19]	<niklasl>	markus: are you normalizing datasets or graphs?
[Tue 11:19]	<niklasl>	gregg: Datasets
[Tue 11:19]	<niklasl>	markus: but the algorithm is called graph normalization?
[Tue 11:19]	<niklasl>	manu: Datasets didn't exist when we wrote the first version of the spec.
[Tue 11:20]	<niklasl>	dave: you normalize to quads
[Tue 11:21]	* niklasl	just realized that my mapping of ESC to caps lock occasionally nukes my scribed text :P
[Tue 11:21]	* mlnt	working a lot in VIM? :-)
[Tue 11:21]	* niklasl	oh yes :)
[Tue 11:22]	<niklasl>	gregg: this is an issue for the RDF WG
[Tue 11:23]	<niklasl>	manu: yes. But it's important to understand that code we're deploying in two weeks use bnode ids for graphs. If the normalization algorithm changes that's a problem
[Tue 11:26]	<niklasl>	dave: It could work for payswarm if we disallow it; we can adapt
[Tue 11:26]	<niklasl>	manu: It'll be hard to convince the RDF WG that the RDF Concepts model is broken.
[Tue 11:26]	<manu-db>	PROPOSAL: Disallow blank node identifiers for graph names.
[Tue 11:26]	<manu-db>	-1 (I think if we do this, we align with the RDF data model, which is broken - no reason to disallow blank-node-like identifiers for graph names)
[Tue 11:26]	<gkellogg>	+1
[Tue 11:26]	<dlongley>	a sad -0
[Tue 11:26]	<mlnt>	+0.5
[Tue 11:27]	<taaz>	-0
[Tue 11:27]	<niklasl>	niklas: +0.1
[Tue 11:29]	<niklasl>	manu: Is there anything that would get more consensus that this?
[Tue 11:29]	<niklasl>	markus: Yeah, what's in the spec right now.
[Tue 11:29]	<niklasl>	markus: if we don't support it in the data model we have to throw an error
[Tue 11:30]	<niklasl>	gregg: by sticking with SHOULD, you allow for usage to evolve which could affect future RDF
[Tue 11:30]	<niklasl>	dave: do we have feedback from RDF WG on SHOULD NOT vs MUST NOT?
[Tue 11:31]	<niklasl>	manu: not really...
[Tue 11:31]	<niklasl>	gregg: my guess is they'd grudgingly go along with should not, but further convince them that JSON-LD is deviating from RDF unnecessarily.
[Tue 11:32]	* niklasl	N3 has for years; the result is that N3 is marginalized and Turtle is close to a REC...
[Tue 11:32]	<mlnt>	this is the current spec text: "Each named graph is a pair consisting of an IRI or blank node identifier (the graph name) and a JSON-LD graph. Whenever possible, the graph name should be an IRI."
[Tue 11:36]	<niklasl>	gregg: what would it mean to use the bnode-id as a subject in a description, and use the same bnode-id for the graph?
[Tue 11:36]	<niklasl>	… this should be brought up to the working group now.
[Tue 11:36]	<niklasl>	… it *may* result in a retreat of a MUST NOT
[Tue 11:38]	<manu-db>	niklasl: We may want to discuss this with the Provenance WG about this.
[Tue 11:44]	<manu-db>	PROPOSAL: Graph names SHOULD use IRIs. The JSON-LD Data model supports identifiers for graphs that are IRIs and identifiers that look like blank node identifiers, but instead identity graphs. The RDF Conversion algorithm SHOULD generate an error when a non-absolute IRI is detected when converting to RDF.
[Tue 11:44]	<mlnt>	Counter Proposal: Keep the current spec text: "Each named graph is a pair consisting of an IRI or blank node identifier (the graph name) and a JSON-LD graph. Whenever possible, the graph name should be an IRI."
[Tue 11:46]	<mlnt>	http://json-ld.org/spec/latest/json-ld-syntax/#relationship-to-rdf
[Tue 11:47]	<niklasl>	gregg: with no change, we need an issue marker for bnode ids as graph ids
[Tue 11:47]	<mlnt>	That's already in the spec: "In contrast to the RDF data model as defined in [RDF-CONCEPTS], JSON-LD allows blank nodes as property labels and graph names. This feature is controversial in the RDF WG and may be removed in the future."
[Tue 11:50]	<niklasl>	manu: we can leave it open if we mark it as at risk (we can still go to LC)
[Tue 11:50]	<niklasl>	… we'll bring it up again in the RDF WG
[Tue 11:53]	<manu-db>	Topic: JSON-LD 1.0 Final Community Group Specification
[Tue 11:53]	<mlnt>	http://json-ld.org/spec/FCGS/json-ld-syntax/20130202/
[Tue 11:54]	<niklasl> manu: Should we publish the FCGS specification?
[Tue 11:54]	<niklasl> niklasl: We still have outstanding issues, why now?
[Tue 11:54]	<niklasl> manu: Because we want to get the Intellectual Property aggrements in place while RDF WG is reviewing a semi-finalized specification.
[Tue 11:54]	<niklasl> gregg: I think we should wait a week, then try again.
[Tue 11:54]	<niklasl>	JSON-LD 1.0 Community Group agrees to wait a week.

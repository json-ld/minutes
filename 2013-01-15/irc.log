[Tue 10:01]	<voip-ld>	Niklas Lindström (SIP/sip2sip.info-000000a3) is in the conference.
[Tue 10:01]	<voip-ld>	Niklas Lindström (SIP/sip2sip.info-000000a3) has joined the conference.
[Tue 10:01]	<voip-ld>	Gregg Kellogg (SIP/10.10.10.228-000000a4) has joined the conference.
[Tue 10:01]	<voip-ld>	Manu Sporny (SIP/6000-000000a5) has joined the conference.
[Tue 10:01]	-->|	mlnt (~markus@net-2-34-222-137.cust.dsl.vodafone.it) has joined #json-ld
[Tue 10:02]	<voip-ld>	Markus Lanthaler (SIP/sip.linphone.org-000000a6) has joined the conference.
[Tue 10:03]	<voip-ld>	<unknown> (IAX2/diamondcard-959) has joined the conference.
[Tue 10:03]	<tidoust>	voip: 959 is me
[Tue 10:03]	<voip-ld>	tidoust is now associated with IAX2/diamondcard-959.
[Tue 10:03]	<tidoust>	voip: mute me
[Tue 10:03]	<voip-ld>	tidoust has been muted.
[Tue 10:03]	<manu-db>	Agenda: http://lists.w3.org/Archives/Public/public-linked-json/2013Jan/0020.html
[Tue 10:03]	* tidoust	Hi, ready to scribe, but note connection seems a bit shaky
[Tue 10:04]	<manu-db>	scribe: tidoust
[Tue 10:04]	<tidoust>	Manu: Two additions to the agenda: IRI vs. URL, and relative compaction of URLs.
[Tue 10:06]	<tidoust>	niklasl: In the Royal Swedish National Library, where I'll be working starting in April, using JSON a lot, still some work to do to push forward on using RDF. Expect to be using JSON-LD explicitly and leverage the fact that JSON-LD can store non-mapped things, so this is good news for JSON-LD adoption.
[Tue 10:06]	<tidoust>	manu: Is that public information?
[Tue 10:06]	<tidoust>	niklasl: Yes, it's a project on github, people will see it when we start integrating JSON-LD.
[Tue 10:06]	<voip-ld>	David I. Lehn (SIP/71.63.61.82-000000a7) has joined the conference.
[Tue 10:06]	<manu-db>	Topic: ISSUE-204: Compact @id's to relative IRIs
[Tue 10:06]	<manu-db>	https://github.com/json-ld/json-ld.org/issues/204
[Tue 10:07]	<tidoust>	manu: We did some implementation over the week-end. We do a lot of digital signature work. We end up storing that info in a MongoDB database. When you compact to a relative IRI, you end up losing the base, which is bad when you need to check the digital signature again.
[Tue 10:08]	<tidoust>	… Now it seems that we need to store the base somewhere (which could be bad for some that only store the JSON-LD document... because - where are you going to put the base?), or change the parameters so that the compaction does not create relative IRIs.
[Tue 10:08]	<tidoust>	… I raise this as a concern. In some cases, it's a nice feature, but in other cases, it may destroy stuff such as digital signatures.
[Tue 10:08]	<niklasl>	q+
[Tue 10:08]	<tidoust>	… Not a big issue, but a bit too aggressive for our use cases. 
[Tue 10:08]	<voip-ld>	Added niklasl to the speaker queue: niklasl
[Tue 10:08]	<manu-db>	ack niklasl
[Tue 10:08]	<voip-ld>	niklasl has the floor. The speaker queue is empty.
[Tue 10:09]	<tidoust>	… In our systems, we do not want relative URLs, but I understand others may have different views.
[Tue 10:09]	<tidoust>	niklasl: I sympathize with this concern.
[Tue 10:09]	<tidoust>	… I didn't really have time to check the API, but I see the risk that someone might forget about that.
[Tue 10:10]	<manu-db>	q+ to discuss how this is mitigated.
[Tue 10:10]	<voip-ld>	Added manu-db to the speaker queue: manu-db
[Tue 10:10]	<mlnt>	q+
[Tue 10:10]	<voip-ld>	Added mlnt to the speaker queue: manu-db, mlnt
[Tue 10:10]	<manu-db>	ack mlnt
[Tue 10:10]	<voip-ld>	manu-db has the floor (to discuss how this is mitigated.). The next speaker is mlnt.
[Tue 10:10]	* tidoust	notes audio is coming very chopped right now
[Tue 10:11]	<gkellogg>	q+
[Tue 10:11]	<voip-ld>	Added gkellogg to the speaker queue: manu-db, gkellogg
[Tue 10:11]	<manu-db>	mlnt: Normally, you'd set the base IRI as an option in the JSONLD document... it defaults to the document IRI - depends on how you pass the document into the API.
[Tue 10:11]	<tidoust>	mlnt: If you don't do anything, there is text here that says it depends on the document IRI, but that depends on how you pass that IRI.
[Tue 10:11]	<tidoust>	… We may change things to pass the IRI explicitly and that would solve the problem
[Tue 10:12]	<tidoust>	manu: The idea that this might happen in production is close to non existent
[Tue 10:12]	<manu-db>	ack manu-db
[Tue 10:12]	<voip-ld>	manu-db has the floor. The next speaker is gkellogg.
[Tue 10:12]	<manu-db>	ack gkellogg
[Tue 10:12]	<voip-ld>	manu-db has the floor. The speaker queue is empty.
[Tue 10:12]	<tidoust>	… I don't know if we really need to do anything here. I'm leaning towards not doing anything.
[Tue 10:13]	<tidoust>	gkellogg: Usually, to serialize, you need to pass a base in order to resolve relative IRIs.
[Tue 10:13]	<tidoust>	… Every other RDF serialization allows me to output a statement of what the base is.
[Tue 10:13]	<tidoust>	… The reason we rejected that in JSON-LD is that we thought you could do that with a term.
[Tue 10:14]	<tidoust>	… If we had a way to automatically define a term that would be the base of the document, we'd solve the problem.
[Tue 10:14]	<tidoust>	… But then there is value in using compact IRIs.
[Tue 10:14]	<niklasl>	q+
[Tue 10:14]	<voip-ld>	Added niklasl to the speaker queue: niklasl
[Tue 10:14]	<tidoust>	manu: It sounds that there isn't a strong push towards changing current state of affairs.
[Tue 10:14]	<manu-db>	ack niklasl
[Tue 10:14]	<voip-ld>	niklasl has the floor. The speaker queue is empty.
[Tue 10:15]	-->|	pchampin (52e02448@gateway/web/freenode/ip.82.224.36.72) has joined #json-ld
[Tue 10:15]	<tidoust>	Niklas: what happens when you issue a compact call where the input is a compact JSON-LD with relative IRIs?
[Tue 10:15]	* niklasl	lost sound...
[Tue 10:15]	<tidoust>	… You'd need to pass the base URI and have no way to prevent that base IRI to be used in the output to generate new relative IRIs.
[Tue 10:16]	* niklasl	will redial in
[Tue 10:16]	<voip-ld>	Niklas Lindström (SIP/sip2sip.info-000000a3) has left the conference.
[Tue 10:16]	<tidoust>	gkellogg: [audio chopped]. I think you would get the result you wanted.
[Tue 10:16]	<voip-ld>	Niklas Lindström (SIP/192.168.3.23-000000a8) has joined the conference.
[Tue 10:16]	* niklasl	is back
[Tue 10:16]	<tidoust>	… There is a danger of losing the base of the document.
[Tue 10:17]	<niklasl>	q+
[Tue 10:17]	<voip-ld>	Added niklasl to the speaker queue: niklasl
[Tue 10:17]	<manu-db>	ack niklasl
[Tue 10:17]	<tidoust>	manu: bottom line is that there are lots of ways to work around these use cases, we're just optimizing for the "main" use case. We have to realize that we could be wrong about that main use case, that's it.
[Tue 10:17]	<voip-ld>	niklasl has the floor. The speaker queue is empty.
[Tue 10:18]	=-=	linclark|afk is now known as linclark
[Tue 10:19]	<tidoust>	niklasl: Just recall something I saw on Twitter. General preferences in JSON APIs for relative IRIs? Responses were advocating in favor of absolute IRIs. You wanted to make things as simple as possible for consumers to follow links and resolving links is a (small) burden in the way of following links.
[Tue 10:19]	<tidoust>	niklasl: data consumption is easier if you use absolute IRIs consistently.
[Tue 10:19]	<tidoust>	manu: That's the only thing that makes me hesitant about this feature.
[Tue 10:20]	<tidoust>	mlnt: You generally want relative IRIs when you're debugging and do not want the base IRI of your staging/prod environment to bother you.
[Tue 10:21]	<tidoust>	manu: I disagree, but I think we'll just go back and forth on that if we go on.
[Tue 10:20]	<gkellogg>	PROPOSAL: Add an at-risk issue on compacting IRIs as relative.
[Tue 10:20]	<manu-db>	+1
[Tue 10:20]	<gkellogg>	+1
[Tue 10:21]	<niklasl>	+1 adding that I'd prefer an option for generating relative IRIs (defaulting to false), "debug mode" should not be the default
[Tue 10:22]	<tidoust>	+1 to using at-rist for that.
[Tue 10:22]	<mlnt>	+1
[Tue 10:22]	<taaz>	+0
[Tue 10:22]	<manu-db>	RESOLVED: Add an at-risk issue on compacting IRIs as relative.
[Tue 10:22]	<tidoust>	manu: I think that's all we can do at this point.
[Tue 10:22]	<manu-db>	Topic: ISSUE-205: Use the term URL instead of IRI in the (API) spec
[Tue 10:22]	<manu-db>	https://github.com/json-ld/json-ld.org/issues/205
[Tue 10:22]	<tidoust>	manu: I spoke with a few folks in the WHATWG shortly before the call.
[Tue 10:23]	<tidoust>	… Markus proposed to close the issue by using the term URL. Pat Hayes and Conal reacted against that, I expect others in the RDF WG to follow.
[Tue 10:23]	<tidoust>	… I do not think we can convince them that using URL for the sake of Web developers is going to work because it's not "correct" in the strictest sense.
[Tue 10:23]	<niklasl>	.. example of IRI used in non-RDF-contexts: http://tools.ietf.org/html/rfc5988
[Tue 10:24]	<niklasl>	.. (Web Linking by Mark Nottingham)
[Tue 10:24]	<tidoust>	gkellogg: greater danger is that using url is trying to serve two masters.
[Tue 10:24]	<manu-db>	There is this - http://url.spec.whatwg.org/
[Tue 10:25]	<tidoust>	manu: the work on that is ongoing, the general feeling is that terminology will converge around "URL".
[Tue 10:25]	<tidoust>	… If we're looking towards the future, we'll see "urls", not "iris".
[Tue 10:26]	<tidoust>	gkellogg: If URLs and IRIs are unified, then good, otherwise it looks like a political stand that we do not need to take.
[Tue 10:27]	<mlnt>	There's still an open issue for HTML5's URL: http://www.w3.org/html/wg/tracker/issues/56
[Tue 10:27]	<tidoust>	manu: We want the spec to be for Web developers. They don't understand the distinction between URLs and IRIs. We should use terminology that Web developers are used to because that's our primary audience for this spec.
[Tue 10:27]	<tidoust>	gkellogg: Is this an argument to be brought to the RDF WG to ask them to update on-going specs to use URLs. If you cannot convince the group to do that, then you should not take a different route for JSON-LD.
[Tue 10:28]	<tidoust>	manu: Rules are different for JSON-LD, the target audience is different for JSON-LD.
[Tue 10:29]	<tidoust>	gkellogg: I know you've been pushing against this, but the most proper place to use URLs would be in a JSON-LD primer, directly targeted at developers.
[Tue 10:29]	<gkellogg>	Just raised concerns about creating an arbitrary terminology difference with other RDF specs, which use IRI.
[Tue 10:29]	<gkellogg>	Serving two masters is never satisfying.
[Tue 10:30]	<tidoust>	niklasl: I agree with Gregg. IRI is the right term to use right now. I think I prefer a note saying that IRI is likely to become equivalent to URL in the future.
[Tue 10:30]	<tidoust>	manu: I disagree, I think using IRI misses the point, but I'm feeling that I'm in the minority here. We're not creating JSON-LD to align ourselves with RDF (at least, I'm not), we're doing it to provide a technology for expressing Linked Data that is easy for Web Developers to use. If we use the IRI terminology, then we're not using terminology that is familiar to our primary audience... especially if that terminology (IRI) is going to be replaced in the future with "URL".
[Tue 10:30]	<tidoust>	niklasl: I would prefer to see URI actually but… anyway.
[Tue 10:31]	<tidoust>	manu: So the argument that is being made by you guys is this: If the merger between URL and IRI had already happened, we would use URL. Since that's not there in REC form, it's going to be difficult to convince the RDF WG to go away from IRI for the rest of their specs. If we can't convince the RDF WG to go away from IRI based on a more recent REC, since JSON-LD is under the purview of that group, we cannot do the change in JSON-LD.
[Tue 10:32]	<tidoust>	… Note that we've taken a stand on this sort of stuff before, first with the push to use JSON-LD as the JSON representation of RDF that the group works on, and then with named graphs. We have JSON-LD and named graphs because we pushed for these sorts of things.
[Tue 10:32]	<tidoust>	gkellogg: A bit different because named graphs were already in the RDF Concepts.
[Tue 10:32]	<tidoust>	… I expect many battles in the future about IRI vs. URL
[Tue 10:33]	<tidoust>	… I agree with Niklas that the invention of the term IRI is a bit of a pity, URI is much better.
[Tue 10:33]	|<--	niklasl has left freenode (Read error: Connection reset by peer)
[Tue 10:34]	-->|	niklasl (~neuron@gate.kb.se) has joined #json-ld
[Tue 10:35]	<tidoust>	… The URL stand is coming from people involved with Web browsers, so it's not surprising. Anne's document is not a spec, more of an opinion.
[Tue 10:35]	<tidoust>	manu: It's an opinion that I happen to agree with strongly.
[Tue 10:35]	<tidoust>	q+
[Tue 10:35]	<voip-ld>	Added tidoust to the speaker queue: tidoust
[Tue 10:35]	<tidoust>	voip: unmute me
[Tue 10:35]	<voip-ld>	tidoust has been unmuted.
[Tue 10:35]	<manu-db>	tidoust: This doesn't seem like it is an easy change - easy resolution is to use IRI in the end and not URL, let's stick to that.
[Tue 10:35]	<tidoust>	voip: mute me
[Tue 10:35]	<voip-ld>	tidoust has been muted.
[Tue 10:36]	<manu-db>	PROPOSAL: Use IRI in the JSON-LD specifications instead of URL.
[Tue 10:36]	<gkellogg>	+1
[Tue 10:36]	<manu-db>	-1
[Tue 10:36]	<tidoust>	+0
[Tue 10:36]	<niklasl>	+1
[Tue 10:36]	<mlnt>	+0.5 (don't like the term but it's currently the most correct one)
[Tue 10:36]	<manu-db>	RESOLVED: Use IRI in the JSON-LD specifications instead of URL.
[Tue 10:36]	* niklasl	a slightly painful +1..
[Tue 10:37]	<manu-db>	Topic: Approach to Algorithms
[Tue 10:37]	<manu-db>	http://json-ld.org/spec/latest/json-ld-api/
[Tue 10:37]	<tidoust>	manu: Markus went through and re-wrote the algorithms.
[Tue 10:37]	<manu-db>	http://json-ld.org/spec/latest/json-ld-api/alternate.html
[Tue 10:37]	<tidoust>	… Gregg also went in to try to make the algorithms more descriptive than prescriptive. The discussion is to decide what should end up in the spec.
[Tue 10:38]	<tidoust>	… Any updates to these algorithms? Quick overview?
[Tue 10:39]	<tidoust>	gkellogg: I made use of Markus' work throughout my updates. I just updated it to remove the repetitive normative text. The biggest difference is sticking a bit closer to the original algorithms to try not to describe data structures that are useful in an implementation.
[Tue 10:39]	<tidoust>	… Other than IRI compaction, I think the algorithms are very similar
[Tue 10:40]	<tidoust>	mlnt: Gregg uses term ranking algorithm, whereas I use inverse context.
[Tue 10:40]	<tidoust>	… Mine has complete fallback rules.
[Tue 10:40]	<tidoust>	… It's trivial to understand which term gets selected if you read the algorithms.
[Tue 10:41]	<niklasl>	q+
[Tue 10:41]	<voip-ld>	Added niklasl to the speaker queue: tidoust, niklasl
[Tue 10:42]	<tidoust>	gkellogg: We could replace the numbers in term rank with something else if needed.
[Tue 10:42]	<tidoust>	q-
[Tue 10:42]	<voip-ld>	Removed tidoust from the speaker queue: niklasl
[Tue 10:42]	<tidoust>	mlnt: In the one case, you calculate numbers, in the other case, you look at containers. Hard to compare algorithms. In the end, it boils down to how you describe it.
[Tue 10:42]	<manu-db>	ack niklasl
[Tue 10:42]	<voip-ld>	niklasl has the floor. The speaker queue is empty.
[Tue 10:43]	<tidoust>	niklasl: Did not have time to sit down and read through this, and even less time to implement that. In general, I think that descriptive is better than prescriptive, as the spec is intended for humans.
[Tue 10:44]	<tidoust>	… My gut feeling is that I would probably do something akin to the inverse context.
[Tue 10:44]	<manu-db>	q+
[Tue 10:44]	<voip-ld>	Added manu-db to the speaker queue: manu-db
[Tue 10:44]	<tidoust>	… When I read the ranking algorithm, I had trouble understanding it.
[Tue 10:45]	<tidoust>	… But I cannot really make an informed statement as to which is the better.
[Tue 10:45]	<gkellogg>	ack manu-db
[Tue 10:45]	<voip-ld>	manu-db has the floor. The speaker queue is empty.
[Tue 10:46]	<tidoust>	manu: Dave Longley had some time to read both of them. I find both of them moderately confusing, but term ranking a bit less so. I don't know how the rank gets computed but I understand how it works. With inverse context, it takes more place in the spec and feels more complex.
[Tue 10:47]	<tidoust>	mlnt: What do you mean by "it takes up so much space"?
[Tue 10:47]	<tidoust>	manu: You have to read a lot more to get the basic data in. With term rank, it's a bunch of "if" statements.
[Tue 10:48]	<tidoust>	mlnt: you just start from step 1 and go through steps.
[Tue 10:49]	<tidoust>	gkellogg: another thing to consider is locality. We could redefine term ranking to be less math, but we rely on it for IRI compaction.
[Tue 10:50]	<niklasl>	+1 to make term ranking algorithm more about intent (less "number-oriented")
[Tue 10:50]	<niklasl>	q+
[Tue 10:50]	<voip-ld>	Added niklasl to the speaker queue: niklasl
[Tue 10:51]	<tidoust>	manu: In the end, the alternative document looks clearer. Dave Longley read some parts of both documents and and decided to implement things his own way.
[Tue 10:51]	<tidoust>	gkellogg: That's a very sensitive thing to do. If Dave have clearer algorithms, it would be good to know.
[Tue 10:52]	<tidoust>	manu: The optimizations that Dave Longley is doing are because of benchmarking we're running on our servers. We found out that having to copy the context was very time consuming.
[Tue 10:53]	<tidoust>	… Many of these optimizations should not go in the spec because they are just too complex.
[Tue 10:53]	<tidoust>	gkellogg: Instead of saying "copy context", we should simply say "use the context".
[Tue 10:53]	<tidoust>	manu: I think we already do that in the spec.
[Tue 10:54]	<tidoust>	… It's simpler to say "make a copy" as people understand they can modify the copy without breaking the original, but implementers can optimize there.
[Tue 10:54]	<tidoust>	… Other parts of the algorithms that changed dramatically?
[Tue 10:54]	<tidoust>	gkellogg: I haven't looked at "flatten". My updates were made to come to an agreement with Markus.
[Tue 10:55]	<manu-db>	ack niklasl
[Tue 10:55]	<voip-ld>	niklasl has the floor. The speaker queue is empty.
[Tue 10:55]	<tidoust>	manu: I think the result is a nice consensus between both views.
[Tue 10:56]	<tidoust>	niklasl: we could make it clear in the spec that the algorithms are very descriptive since we already know that they are suboptimal.
[Tue 10:56]	<tidoust>	… I'm convinced my way is not the fastest. Something to that effect in the spec would be good.
[Tue 10:56]	<tidoust>	gkellogg: Yes. Putting implementation notes is a reasonable thing to do, either inline or as an appendix.
[Tue 10:59]	* niklasl	gotta go (another telecon)
[Tue 10:59]	* manu-db	waves at niklasl.
[Tue 11:00]	-->|	PaulCapestany (~PaulCapes@204.28.124.82) has joined #json-ld
[Tue 11:00]	* tidoust	apologizes for bad scribing, for some reason, our network connection is extremely bad today, I did not get anything in the last 2 minutes…
[Tue 11:00]	|<--	pchampin has left freenode (Quit: Page closed)
[Tue 11:00]	<tidoust>	manu: two things that we need to decide here. General approach and what bugs need to be fixed.
[Tue 11:01]	<voip-ld>	tidoust (IAX2/diamondcard-959) has left the conference.
[Tue 11:02]	<manu-db>	tidoust: I found a number of bugs by just quickly skimming over it. I know that the spec that I wrote almost exactly matches my code.
[Tue 11:02]	<manu-db>	gkellogg: For the most part, this is what I implement.
[Tue 11:03]	<voip-ld>	<unknown> (IAX2/diamondcard-4388) has joined the conference.
[Tue 11:03]	<tidoust>	voip: 4388 is me
[Tue 11:03]	<voip-ld>	tidoust is now associated with IAX2/diamondcard-4388.
[Tue 11:03]	<tidoust>	voip: mute me
[Tue 11:03]	<voip-ld>	tidoust has been muted.
[Tue 11:04]	* niklasl	waves; bye
[Tue 11:04]	<voip-ld>	Niklas Lindström (SIP/192.168.3.23-000000a8) has left the conference.
[Tue 11:05]	<manu-db>	gkellogg: if there are bugs, we need to focus on those.
[Tue 11:05]	<manu-db>	manu: I'm very concerned about holding up the work waiting for a complete implementation of all algorithms.
[Tue 11:06]	<--|	niklasl has left #json-ld
[Tue 11:09]	<manu-db>	markus: Then what's the point of a test suite if all of the algorithms haven't been impelemnted verbatim at least once?
[Tue 11:10]	<manu-db>	manu: The reason test suites exist is to ensure that implementations match the algorithms. The test suite doesn't exist to ensure that everybody implements the algorithms exactly as they are laid out in the spec. In fact, this almost never happens - everybody has their own twist on implementing the algorithms. With enough eyes on those algorithms, we'll get the right over the next few months. We're talking about minor bugs, not major design issues. I don't think we should hold up going to Last Call until we have a verbatim implementation of all algorithms.
[Tue 11:10]	<manu-db>	markus: I disagree, I don't buy that argument. I think we need to make sure that somebody has implemented the algorithms verbatim, that way we'll know if they're correct.
[Tue 11:10]	<manu-db>	manu: That rarely happens when working on these specs. Typically, a few editors write the algorithms, verify that the intent is correct, then each may go off an do their own implementation. These algorithms are meant to be descriptive, not something somebody can take an implement verbatim (even though that is how you rewrote the algorithms.
[Tue 11:10]	<manu-db>	manu: It doesn't look like we're going to get agreement on this topic this week. 
[Tue 11:12]	<voip-ld>	Gregg Kellogg (SIP/10.10.10.228-000000a4) has left the conference.
[Tue 11:12]	<voip-ld>	Manu Sporny (SIP/6000-000000a5) has left the conference.
[Tue 11:12]	<voip-ld>	David I. Lehn (SIP/71.63.61.82-000000a7) has left the conference.
[Tue 11:12]	<tidoust>	manu: I'll have Dave Longley send thoughts on to the mailing-list. Let's continue discussion on this topic next week.
[Tue 11:12]	<voip-ld>	Markus Lanthaler (SIP/sip.linphone.org-000000a6) has left the conference.

[10:02]	<manu1>	Agenda: http://lists.w3.org/Archives/Public/public-linked-json/2012Jul/0022.html
[10:03]	<manu1>	scribe: manu1
[10:03]	<manu1>	manu: Standard agenda... anything else to add to this?
[10:04]	<manu1>	gkellogg: I did a talk on JSON-LD to the bioinformatics group - also the Protoge group.
[10:04]	<manu1>	Topic: JSON-LD for Biomedical Informatics
[10:04]	<manu1>	gkellogg: lots of ontology work there - work around Protoge - some work mapping multiple ontologies together.
[10:05]	<manu1>	gkellogg: Lots to do with different format differences - as the applications make a lot of use of Web pages - JSON-LD would be used to support REST-ful APIs in HTML-based user interfaces.
[10:05]	<manu1>	manu: Were there any feature requests?
[10:06]	<manu1>	gkellogg: The main one that keeps coming up is @id mapping... something being in a different form than is stated.
[10:06]	<manu1>	manu: so @id mapping via @graph?
[10:06]	<voip-ld>	David I. Lehn (SIP/71.171.19.12-00000006) has joined the conference.
[10:06]	<manu1>	gkellogg: no, template-based IRI generation.
[10:07]	<gkellogg>	https://github.com/json-ld/json-ld.org/issues/108
[10:08]	<manu1>	niklasl: We should be able to do something simple.
[10:08]	<manu1>	manu: I'm confused why they can't just generate the @id from their data?
[10:08]	<manu1>	gkellogg: Yeah, I mentioned that.
[10:09]	<manu1>	niklasl: This is a teaching issue, potentially - we should consider this if we go down this path. People tend to conflate what we mean by "@id" with what they use internally as an id... We mean "@id" to connect data with other stuff - it's a public identifier. They seem to be using @id like a local identifier.
[10:09]	<manu1>	niklasl: It's dangerous to conflate these things - you don't link by IRI anymore. There are things here that we need to be explicit about.
[10:11]	<gkellogg>	http://tools.ietf.org/html/rfc6570
[10:11]	<manu1>	gkellogg: We may want to look at URI templates - incorporate that.
[10:11]	<niklasl>	http://code.google.com/p/court/wiki/COIN
[10:11]	<manu1>	niklasl: I have a temporarily shelved project called COIN (above)
[10:12]	<manu1>	niklasl: This covers how to create IRIs from parts of the data... I use that in the legal information project I worked on. We had very strange legacy forms and needed to generate @ids.
[10:12]	<manu1>	niklasl: I started to declare these definitions in raw JSON - needed to define a vocabulary to make this more clean.
[10:13]	<manu1>	niklasl: I started to write a spec for it. Richard Cyganiak thought that it would be a good thing to have.
[10:13]	<manu1>	niklasl: It's not always as simple as picking the one key from the data - it's often a combination of keys.
[10:13]	<manu1>	niklasl: Very much depends on the old ways of publishing the data.
[10:15]	<manu1>	manu: I'm concerned about re-opening this issue, it's fairly easy to generate these @ids in code.
[10:16]	<manu1>	niklasl: Different IRIs represent different things - there's a decent bit of complexity here.
[10:16]	<manu1>	gkellogg: The other area that came up is the use of URNs as an identifier space - the lack of a @base keyword prevent us from creating URNs automatically.
[10:17]	<manu1>	gkellogg: There was some discussion about whether @base should be something we should add back into JSON-LD.
[10:17]	<manu1>	niklasl: Yes, that or some other prefix... you could define terms for the @id itself... bind the key to the proper IRI and use that opaque value for the value of the @id property. If you really want that shape, you can push all the @ids into the context.
[10:18]	<manu1>	gkellogg: I will update the issue to the minutes from today.
[10:18]	<manu1>	Topic: JSON-LD First Public Working Drafts
[10:18]	<manu1>	scribe: gkellogg
[10:18]	<gkellogg>	manu: JSON-LD FPWD out!
[10:19]	<gkellogg>	… When we started JSON-LD in the CG, we were unsure where it was going. However, it's been going smoothly in the RDF WG and the chairs support getting this out as a REC.
[10:19]	<mlnt>	http://www.w3.org/TR/json-ld-syntax/
[10:19]	<mlnt>	http://www.w3.org/TR/json-ld-api/
[10:20]	<gkellogg>	… I forgot to include niklas' name in the FPWD, but I'm trying to get it updated.
[10:21]	<gkellogg>	manu: During the RDF call last week, there is concern about how we're accepting changes into the spec.
[10:21]	<gkellogg>	… The API and Syntax are now under the purview of the RDF WG, so the CG isn't working on them any more.
[10:21]	<gkellogg>	… That means we can't accept pull requests from people not in the WG.
[10:22]	<gkellogg>	… If you have commit rights, make sure their from someone who's an RDF WG member.
[10:22]	<gkellogg>	… This relates to ensuring that their IPR is licensed to be used in the spec.
[10:22]	<gkellogg>	… Alternatively, with WG members can make updates using their own language.
[10:23]	<gkellogg>	… This means that dlongley and taaz can't make changes as they're not WG members.
[10:23]	<gkellogg>	niklasl: I've been waiting for response to get in the WG myself.
[10:24]	<gkellogg>	manu: If something does need to go in, it requires an explicit license.
[10:24]	<gkellogg>	manu: Change requests can go into RDF Comments. Thus, if a pull request comes in, we can ask them to send it to RDF Comments.
[10:25]	<gkellogg>	… There are some open questions of if a pull request can basically assert the license, but it's not worth persuing right now.
[10:26]	* taaz	hopes w3c can fix their policies someday to allow the public to participate
[10:26]	<gkellogg>	… Also, don't accept patches sent into RDF Comments.
[10:27]	<gkellogg>	niklasl: It's unfortunate that dave & dave can't contribute. Sort of like my situation, but worse.
[10:28]	<gkellogg>	… As it is right now, I take time off to do stuff, and I can't motivate my company to pay for that.
[10:29]	<taaz>	just to understand, how much can we even participate on these calls? is suggesting changes here a problem?
[10:29]	<manu>	No, suggesting changes here is not a problem... but we do need to clear up the legalities.
[10:32]	<gkellogg>	taaz: It's one issue for us, but for random people that come across the specs, it's another issue.
[10:33]	<manu1>	gkellogg: The intention is to deal with substantive changes - not typos.
[10:34]	<gkellogg>	manu: it's an issue of keeping things on record at W3C.
[10:35]	<gkellogg>	… This means we need to be careful when new people join the call. However, there's no "thought police", but when something new comes up, we need to be careful.
[10:35]	<gkellogg>	… I'm discussing with Ian at W3C.
[10:35]	<manu1>	Topic: ISSUE-132: Reconsider prefix/suffix separator
[10:35]	<manu1>	https://github.com/json-ld/json-ld.org/issues/132
[10:36]	<gkellogg>	markus: basically, reconsider the use of ":" as a separator in a Compact IRI, or use another character to allow it to be used as an identifier within a programming language.
[10:36]	<gkellogg>	… People don't like to use prefixes, because they can't use the "." notation.
[10:37]	<gkellogg>	… If we're going to change it, we should do it now.
[10:37]	<gkellogg>	manu: agree that using "." operator is preferred.
[10:37]	<gkellogg>	… What we did with Payswarm was to decide to turn everything into a term.
[10:38]	<manu1>	Instead of this - sec:publicKey we now do this: publicKey
[10:38]	<taaz>	and our context has become large!
[10:38]	<gkellogg>	manu: this has made for large contexts.
[10:38]	<gkellogg>	… "_" and "__" are problematic; sometimes used in vocabularies.
[10:39]	<gkellogg>	… "$" is used in JavaScript, but is confusing when you look at the code.
[10:39]	<niklasl>	q+
[10:39]	<voip-ld>	Added niklasl to the speaker queue: niklasl
[10:39]	<gkellogg>	… @vocab is an issue when using multiple vocabularies.
[10:40]	<gkellogg>	… Using the [] operators is slightly annoying, but not too bad.
[10:40]	<gkellogg>	q+
[10:40]	<voip-ld>	Added gkellogg to the speaker queue: niklasl, gkellogg
[10:40]	<manu1>	ack niklasl
[10:40]	<voip-ld>	niklasl has the floor. The next speaker is gkellogg.
[10:40]	<gkellogg>	niklas: I generally agree that we should use terms in the context to handle these issues.
[10:41]	<gkellogg>	… I had thoughts of using prefix with another keyword, and I've come to see that if I'm not defining the term in the context, I'm probably trying to mix too much.
[10:41]	<tidoust>	[I think using terms, either explicitly or through @vocab, really helps, so I wouldn't try to change a prefix that is already agreed upon pretty much everywhere else]
[10:41]	<gkellogg>	… A context is not a general thing, but is a very specific thing. If I want to publish everything I've got, the explicit use of @prefix or IRIs is appropriate.
[10:42]	<gkellogg>	… The explicit needs to use [] is a way to signal that it is auxiliary data, and not intended to be primary.
[10:42]	<gkellogg>	… in general, using terms to define the context is the way to go.
[10:42]	<gkellogg>	… I think that CURIEs are a pragmatic tool to make IRIs compact, but that's just for data packing.
[10:43]	<gkellogg>	… That said, it applies regardless of if you use ":" or something else.
[10:43]	<manu1>	q+ to mention jquery as an issue for $
[10:43]	<voip-ld>	Added manu1 to the speaker queue: niklasl, manu1
[10:44]	<manu1>	ack gkellogg
[10:44]	<voip-ld>	niklasl has the floor. The next speaker is manu1.
[10:44]	<gkellogg>	… If the issue crops up at general intervals, I wouldn't mind a mechanism of defining an alias for ":" in the context, but I'd rather not switch to it.
[10:44]	<manu1>	gkellogg: I'm working quite a bit with my own vocab, using schema.org - when I use schema terms, there are quite a number of them. Programmatically, writing code to access elements from objects, I know what I want to access... so I alias "@id" and "@type" in backbone.
[10:45]	<manu1>	gkellogg: There are certain things I expect every object to have, such as a name or description - when accessing range, subtypeof - for those cases, I define terms to make it easy. It's for the cases where my logic is not built to access things that are not known in there, I couldn't use dot-notation. My logic doesn't try to deal with that data.
[10:46]	<manu1>	gkellogg: I don't see a need to be more explicit to allow dot notation for things that are not already built into my code.
[10:46]	<manu1>	ack manu1
[10:46]	<voip-ld>	niklasl has the floor (to mention jquery as an issue for $). The speaker queue is empty.
[10:46]	<gkellogg>	manu: the other issue with "$" is that can be confused with jQuery if you're scanning through the code.
[10:47]	<gkellogg>	markus: I agree with the arguments, but it's more about why people are using @vocab; it's not that it's missing, but because prefixes loose some convenience. On the other hand, people don't want large contexts.
[10:47]	<manu1>	q+
[10:47]	<voip-ld>	Added manu1 to the speaker queue: manu1
[10:47]	<gkellogg>	niklas: I don't see how this makes the need for @vocab to go away. WIth @vocab, you use the terms from the vocabulary "as-is".
[10:48]	<gkellogg>	markus: using as-is, means that you don't need to use brackets.
[10:48]	<gkellogg>	w+
[10:48]	<gkellogg>	q+
[10:48]	<voip-ld>	Added gkellogg to the speaker queue: manu1, gkellogg
[10:48]	<manu1>	ack
[10:48]	<voip-ld>	manu1 has the floor. The next speaker is gkellogg.
[10:49]	<gkellogg>	manu: I think that for some sub-set of users, the use of @vocab is useful. It's mainly useful for vocabularies such as schema.org.
[10:49]	<gkellogg>	… I know some of the people from Google like this because it makes the data look clean.
[10:50]	<gkellogg>	… I don't know if we can make an argument about the primary reason people are using these attributes. For example, If we changed it to "_", our company still wouldn't use it.
[10:50]	<gkellogg>	… We think our developers are going to want to use "." notation. Developers would rather use ".asset" rather than ".ps_asset".
[10:51]	<gkellogg>	… We've really switched our opinions on CURIEs in general. They're great for compacting use of IRIs, but when you actually go to work with the data, terms are much more useful.
[10:51]	<manu1>	ack
[10:51]	<voip-ld>	manu1 has the floor. The speaker queue is empty.
[10:52]	<manu1>	gkellogg: I do have some other uses where I use terms - an annotation property - what term I want to use in the OWL definitions - the reason for that is not because of programmatic access - it's what users expect for common properties. I use OWL with restrictions as a way to show properties that are expected to be expressed in an object. For those types of things, I want to make it friendly...
[10:53]	<manu1>	...to developers that use 'name' or 'date' without having to do things like 'schema_name' or 'schema_date'.
[10:53]	<manu1>	gkellogg: That's really where terms come in handy - with regards to that, I don't find having to use square brackets to be problematic.
[10:54]	<manu1>	PROPOSAL: Do not change the prefix-suffix separator from COLON to anything else.
[10:54]	<gkellogg>	+1
[10:54]	<manu1>	+1
[10:54]	<niklasl>	+1
[10:54]	<mlnt>	+0.5
[10:54]	<taaz>	+1
[10:54]	<manu1>	RESOLVED: Do not change the prefix-suffix separator from COLON ':' to anything else.
[10:54]	<tidoust>	+1
[10:54]	<manu1>	niklasl: Should we introduce an alias for ':' ?
[10:55]	<manu1>	PROPOSAL: Allow the prefix-suffix separator to be aliased (for example, '$' in addition to ':')
[10:55]	<manu1>	-1
[10:55]	<mlnt>	-1
[10:55]	<gkellogg>	-1
[10:55]	<niklasl>	+0.5
[10:55]	<taaz>	+0
[10:55]	<tidoust>	+0
[10:55]	<gkellogg>	Group consensus on not allowing prefix-suffix separator aliasing.
[10:55]	<manu1>	Topic: Super sessions
[10:57]	<gkellogg>	manu: preference for 75 min or 90 min calls.
[10:57]	<gkellogg>	niklas: better than 120!
[10:58]	<gkellogg>	manu: next call will be 90 minutes
[10:58]	<gkellogg>	… we'll continue on 90 minute calls while we get through to LC.
[10:58]	<tidoust>	[regrets for next 2 weeks]
